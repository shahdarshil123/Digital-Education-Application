/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.workArea.Student;

import Business.Business;
import Business.Course.StudentBrowseCourses;
import Business.Course.StudentCourseDirectory;
import Business.Course.StudentCourseStatus;
import Business.Course.StudentCourses;
import Business.UserAccounts.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Darshil Shah
 */
public class StudentCourseworkJPanel extends javax.swing.JPanel {

    /**
     * Creates new form StudentCourseworkJPanel
     */
    JPanel workAreaPanel;
    Business business;
    UserAccount userAccount;
    StudentCourseDirectory studentCourseList;
    StudentCourses studentCourses;
    public StudentCourseworkJPanel(JPanel workAreaPanel, UserAccount userAccount,  Business business) {
        initComponents();
        this.workAreaPanel = workAreaPanel;
        this.userAccount = userAccount;
        this.business = business;
        this.studentCourseList = business.getStudentCoursesList();
        this.studentCourses =  studentCourseList.findStudentCourses(userAccount.getStudentProfile());
        populateTable(studentCourses);
        validateTranscripts(studentCourses);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudentCourseWork = new javax.swing.JTable();
        btnRequestTranscripts = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblRating = new javax.swing.JLabel();
        cbRating = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 153, 255));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Student Coursework");

        tblStudentCourseWork.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        tblStudentCourseWork.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Course ID", "Course Name", "Professor Name", "Course Completion Status"
            }
        ));
        tblStudentCourseWork.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStudentCourseWorkMouseClicked(evt);
            }
        });
        tblStudentCourseWork.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblStudentCourseWorkKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblStudentCourseWork);

        btnRequestTranscripts.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnRequestTranscripts.setText("Show Transcripts");
        btnRequestTranscripts.setEnabled(false);
        btnRequestTranscripts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestTranscriptsActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblRating.setText("Rating");

        cbRating.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1.0", "2.0", "3.0", "4.0", "5.0" }));
        cbRating.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRatingActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(btnBack)
                        .addGap(145, 145, 145)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(btnRequestTranscripts)
                        .addGap(47, 47, 47)
                        .addComponent(lblRating, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(86, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRequestTranscripts)
                    .addComponent(lblRating)
                    .addComponent(cbRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addContainerGap(219, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRequestTranscriptsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestTranscriptsActionPerformed
        // TODO add your handling code here:
        StudentRequestGraduationJPanel studentRequestGraduationPanel = new StudentRequestGraduationJPanel (workAreaPanel,userAccount,studentCourses);
        workAreaPanel.add("studentRequestGraduationPanel",studentRequestGraduationPanel);
        CardLayout layout = (CardLayout) workAreaPanel.getLayout();
        layout.next(workAreaPanel);
    }//GEN-LAST:event_btnRequestTranscriptsActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        workAreaPanel.remove(this);
        CardLayout layout = (CardLayout)workAreaPanel.getLayout();
        layout.previous(workAreaPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void cbRatingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRatingActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cbRatingActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
         int selectedRowIndex = tblStudentCourseWork.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please select course from Course Catalog to give rating");
            return;
        }
        DefaultTableModel dtm = (DefaultTableModel) tblStudentCourseWork.getModel();
        double rating = Double.parseDouble(cbRating.getSelectedItem().toString());
        System.out.println(rating);
        StudentCourseStatus studentCourseStatus = (StudentCourseStatus)dtm.getValueAt(selectedRowIndex,3);
        studentCourseStatus.setProffesorRating(rating);
        JOptionPane.showMessageDialog(null,"Student information saved.");
        return;
    }//GEN-LAST:event_btnSaveActionPerformed

    private void tblStudentCourseWorkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblStudentCourseWorkKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_tblStudentCourseWorkKeyPressed

    private void tblStudentCourseWorkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStudentCourseWorkMouseClicked
        // TODO add your handling code here:
        int selectedRowIndex = tblStudentCourseWork.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please select course from Course Catalog to give rating");
            return;
        }
        DefaultTableModel dtm = (DefaultTableModel) tblStudentCourseWork.getModel();
        StudentCourseStatus studentCourseStatus = (StudentCourseStatus)dtm.getValueAt(selectedRowIndex,3);
        System.out.println(studentCourseStatus.getProffesorRating());
        cbRating.setSelectedItem(Double.toString(studentCourseStatus.getProffesorRating()));
    }//GEN-LAST:event_tblStudentCourseWorkMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRequestTranscripts;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cbRating;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblRating;
    private javax.swing.JTable tblStudentCourseWork;
    // End of variables declaration//GEN-END:variables

    private void populateTable(StudentCourses studentCourses) {
       DefaultTableModel dtm = (DefaultTableModel) tblStudentCourseWork.getModel();
       dtm.setRowCount(0);
       for(StudentCourseStatus studentCourseStatus: studentCourses.getStudentCourses()){
                Object row[]= new Object[4];
                row[0] = studentCourseStatus.getStudentBrowseCourses().getCourseSemester();
                row[1] = studentCourseStatus.getStudentBrowseCourses().getCourseSemester().getCourse().getCourseName();
                row[2] = studentCourseStatus.getStudentBrowseCourses().getProfessor().getPerson().getPersonName();
                row[3] = studentCourseStatus;
                dtm.addRow(row);         
       }
    }

    private void validateTranscripts(StudentCourses studentCourses) {
        int counter = 0;
        for(StudentCourseStatus studentCourseStatus: studentCourses.getStudentCourses()){
            if((studentCourseStatus.getCourseStatus()).equals("Completed")){
                counter++;
            }
        }
        if(counter==8){
            btnRequestTranscripts.setEnabled(true);
        }
    }

    private void populateRating(StudentCourses studentCourses) {
        
    }
}
